[{"C:\\ReactJS\\E-Commerce\\frontend\\src\\App.js":"1","C:\\ReactJS\\E-Commerce\\frontend\\src\\shared\\header\\Navigation.js":"2","C:\\ReactJS\\E-Commerce\\frontend\\src\\reportWebVitals.js":"3","C:\\ReactJS\\E-Commerce\\frontend\\src\\index.js":"4","C:\\ReactJS\\E-Commerce\\frontend\\src\\shared\\footer\\Footer.js":"5","C:\\ReactJS\\E-Commerce\\frontend\\src\\screens\\HomeScreen.js":"6","C:\\ReactJS\\E-Commerce\\frontend\\src\\components\\product\\Product.js":"7","C:\\ReactJS\\E-Commerce\\frontend\\src\\shared\\card\\Card.js":"8","C:\\ReactJS\\E-Commerce\\frontend\\src\\shared\\rating\\Rating.js":"9","C:\\ReactJS\\E-Commerce\\frontend\\src\\screens\\ProductScreen.js":"10","C:\\ReactJS\\E-Commerce\\frontend\\src\\global-state\\store.js":"11","C:\\ReactJS\\E-Commerce\\frontend\\src\\global-state\\reducers\\productReducers.js":"12","C:\\ReactJS\\E-Commerce\\frontend\\src\\constants\\productContants.js":"13","C:\\ReactJS\\E-Commerce\\frontend\\src\\global-state\\actions\\productActions.js":"14","C:\\ReactJS\\E-Commerce\\frontend\\src\\shared\\loader\\Loader.js":"15","C:\\ReactJS\\E-Commerce\\frontend\\src\\shared\\message\\Message.js":"16","C:\\ReactJS\\E-Commerce\\frontend\\src\\constants\\userContants.js":"17","C:\\ReactJS\\E-Commerce\\frontend\\src\\global-state\\reducers\\userLoginReducer.js":"18","C:\\ReactJS\\E-Commerce\\frontend\\src\\shared\\form-container\\FormContainer.js":"19","C:\\ReactJS\\E-Commerce\\frontend\\src\\global-state\\actions\\userLoginActions.js":"20","C:\\ReactJS\\E-Commerce\\frontend\\src\\shared\\login-modal\\login.js":"21","C:\\ReactJS\\E-Commerce\\frontend\\src\\screens\\CartScreen.js":"22","C:\\ReactJS\\E-Commerce\\frontend\\src\\constants\\cartConstants.js":"23","C:\\ReactJS\\E-Commerce\\frontend\\src\\global-state\\reducers\\cartReducers.js":"24","C:\\ReactJS\\E-Commerce\\frontend\\src\\global-state\\actions\\cartActions.js":"25","C:\\ReactJS\\E-Commerce\\frontend\\src\\global-state\\reducers\\userRegisterReducers.js":"26","C:\\ReactJS\\E-Commerce\\frontend\\src\\screens\\ProfileScreen.js":"27","C:\\ReactJS\\E-Commerce\\frontend\\src\\screens\\CheckoutComponents.js":"28","C:\\ReactJS\\E-Commerce\\frontend\\src\\constants\\orderConstants.js":"29","C:\\ReactJS\\E-Commerce\\frontend\\src\\global-state\\reducers\\orderReducers.js":"30","C:\\ReactJS\\E-Commerce\\frontend\\src\\global-state\\actions\\orderActions.js":"31","C:\\ReactJS\\E-Commerce\\frontend\\src\\components\\order-item\\OrderItem.js":"32","C:\\ReactJS\\E-Commerce\\frontend\\src\\screens\\AdminScreen.js":"33","C:\\ReactJS\\E-Commerce\\frontend\\src\\screens\\AddProductScreen.js":"34","C:\\ReactJS\\E-Commerce\\frontend\\src\\shared\\validators\\validators.js":"35"},{"size":1414,"mtime":1610872428182,"results":"36","hashOfConfig":"37"},{"size":6615,"mtime":1610353924270,"results":"38","hashOfConfig":"37"},{"size":362,"mtime":1607601839020,"results":"39","hashOfConfig":"37"},{"size":610,"mtime":1609763805337,"results":"40","hashOfConfig":"37"},{"size":385,"mtime":1609675314814,"results":"41","hashOfConfig":"37"},{"size":1262,"mtime":1609771344767,"results":"42","hashOfConfig":"37"},{"size":1273,"mtime":1610342581140,"results":"43","hashOfConfig":"37"},{"size":180,"mtime":1609312462955,"results":"44","hashOfConfig":"37"},{"size":2112,"mtime":1609689210411,"results":"45","hashOfConfig":"37"},{"size":5006,"mtime":1610273806190,"results":"46","hashOfConfig":"37"},{"size":1736,"mtime":1610706528859,"results":"47","hashOfConfig":"37"},{"size":1308,"mtime":1609772533796,"results":"48","hashOfConfig":"37"},{"size":372,"mtime":1609772328325,"results":"49","hashOfConfig":"37"},{"size":1187,"mtime":1609773453156,"results":"50","hashOfConfig":"37"},{"size":411,"mtime":1609771113537,"results":"51","hashOfConfig":"37"},{"size":256,"mtime":1609771247374,"results":"52","hashOfConfig":"37"},{"size":865,"mtime":1610356632977,"results":"53","hashOfConfig":"37"},{"size":1971,"mtime":1610357678397,"results":"54","hashOfConfig":"37"},{"size":348,"mtime":1610362955111,"results":"55","hashOfConfig":"37"},{"size":3762,"mtime":1610357810057,"results":"56","hashOfConfig":"37"},{"size":3083,"mtime":1610364317631,"results":"57","hashOfConfig":"37"},{"size":2778,"mtime":1610425787454,"results":"58","hashOfConfig":"37"},{"size":171,"mtime":1610367556612,"results":"59","hashOfConfig":"37"},{"size":971,"mtime":1610370545460,"results":"60","hashOfConfig":"37"},{"size":882,"mtime":1610370631172,"results":"61","hashOfConfig":"37"},{"size":722,"mtime":1610343053269,"results":"62","hashOfConfig":"37"},{"size":4261,"mtime":1610805368052,"results":"63","hashOfConfig":"37"},{"size":10661,"mtime":1610706615111,"results":"64","hashOfConfig":"37"},{"size":177,"mtime":1610693314574,"results":"65","hashOfConfig":"37"},{"size":754,"mtime":1610706405985,"results":"66","hashOfConfig":"37"},{"size":1008,"mtime":1610695367069,"results":"67","hashOfConfig":"37"},{"size":601,"mtime":1610803933089,"results":"68","hashOfConfig":"37"},{"size":2097,"mtime":1610870533419,"results":"69","hashOfConfig":"37"},{"size":10647,"mtime":1610969371725,"results":"70","hashOfConfig":"37"},{"size":1688,"mtime":1610896205509,"results":"71","hashOfConfig":"37"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"75"},"1t8a506",{"filePath":"76","messages":"77","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"79"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"79"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"95"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"85"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"108"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"108"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"88"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"79"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"79"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"135"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"79"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"108"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"79"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"108"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"161","messages":"162","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"135"},"C:\\ReactJS\\E-Commerce\\frontend\\src\\App.js",["166","167"],"import \"./App.css\";\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\n\nimport { Container } from \"react-bootstrap\";\n\nimport Navigation from \"./shared/header/Navigation\";\nimport Footer from \"./shared/footer/Footer\";\nimport HomeScreen from \"./screens/HomeScreen\";\nimport ProductScreen from \"./screens/ProductScreen\";\nimport LoginScreen from \"./shared/login-modal/login\";\nimport CartScreen from \"./screens/CartScreen\";\nimport ProfileScreen from \"./screens/ProfileScreen\";\nimport { CheckoutComponents } from \"./screens/CheckoutComponents\";\nimport AdminScreen from \"./screens/AdminScreen\";\nimport AddProductScreen from \"./screens/AddProductScreen\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <Navigation />\n        <main className=\"main-content\">\n          <Route path={`/login`} component={LoginScreen} />\n          <Route path={`/product/:id`} component={ProductScreen} />\n          <Route path={`/add-product`} component={AddProductScreen} />\n          <Route path={`/cart/:id?`} component={CartScreen} />\n          <Route path={`/profile`} component={ProfileScreen} />\n          <Route path={`/admin`} component={AdminScreen} />\n          <Route path={`/checkout-component`} component={CheckoutComponents} />\n          <Route path=\"/\" component={HomeScreen} exact />\n        </main>\n        <Footer />\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n",["168","169"],"C:\\ReactJS\\E-Commerce\\frontend\\src\\shared\\header\\Navigation.js",["170","171","172"],"import React, { useEffect, useState } from \"react\";\r\nimport \"./Navigation.css\";\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport { logout } from \"../../global-state/actions/userLoginActions\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport ShoppingCartIcon from \"@material-ui/icons/ShoppingCart\";\r\nimport PersonIcon from \"@material-ui/icons/Person\";\r\n\r\nfunction Navigation() {\r\n  const [productSubMenuOpen, setProductSubMenuOpen] = useState(false);\r\n  const [loginSubMenuOpen, setLoginSubMenuOpen] = useState(false);\r\n  const [profileMode, setProfileMode] = useState(false);\r\n  const [profileName, setProfileName] = useState(\"LOGIN\");\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n\r\n  const { userInfo } = userLogin;\r\n\r\n  const logOut = () => {\r\n    dispatch(logout());\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (userInfo) {\r\n      let userName = userInfo.name.split(\" \")[0].substring(0, 5).toUpperCase();\r\n      setProfileMode(true);\r\n      setProfileName(userName);\r\n    } else {\r\n      setProfileMode(false);\r\n      setProfileName(\"LOGIN\");\r\n    }\r\n  }, [userInfo]);\r\n\r\n  return (\r\n    <div className=\"main__navigation\">\r\n      <div className=\"navigation\">\r\n        <ul className=\"navigation-bar\">\r\n          <li>\r\n            <Link className=\"navigation-bar__link\">\r\n              <i className=\"fa fa-fw fa-home\"></i>HOME\r\n            </Link>\r\n          </li>\r\n          <li\r\n            onMouseOver={() => {\r\n              setProductSubMenuOpen(true);\r\n            }}\r\n            onMouseLeave={() => {\r\n              setProductSubMenuOpen(false);\r\n            }}\r\n          >\r\n            <Link className=\"navigation-bar__link navigation-bar__link__product\">\r\n              PRODUCTS\r\n            </Link>\r\n\r\n            {productSubMenuOpen && (\r\n              <div className=\"product__sub-menu\">\r\n                <ul className=\"product__sub-menu__list\">\r\n                  <li>\r\n                    <Link className=\"product__sub-menu__link\">SERVICES</Link>\r\n                  </li>\r\n                  <li>\r\n                    <Link className=\"product__sub-menu__link\">ABOUT US</Link>\r\n                  </li>\r\n                  <li>\r\n                    <Link className=\"product__sub-menu__link\">AVATAR</Link>\r\n                  </li>\r\n                </ul>\r\n              </div>\r\n            )}\r\n          </li>\r\n          <li>\r\n            <Link className=\"navigation-bar__link\">ABOUT US</Link>\r\n          </li>\r\n\r\n          <li\r\n            onMouseOver={() => {\r\n              setLoginSubMenuOpen(true);\r\n            }}\r\n            onMouseLeave={() => {\r\n              setLoginSubMenuOpen(false);\r\n            }}\r\n          >\r\n            {userInfo ? (\r\n              <Link  className=\"navigation-bar__link navigation-bar__link__product\">\r\n                {profileName}\r\n              </Link>\r\n            ) : (\r\n              <Link to = '/login' className=\"navigation-bar__link navigation-bar__link__product\">\r\n                LOGIN\r\n              </Link>\r\n            )}\r\n\r\n            {profileMode && loginSubMenuOpen && (\r\n              <div className=\"product__sub-menu\">\r\n                <ul className=\"product__sub-menu__list\">\r\n                  <li>\r\n                    <Link to = \"/profile\" className=\"product__sub-menu__link\">PROFILE</Link>\r\n                  </li>\r\n                  <li>\r\n                    <Link\r\n                      className=\"product__sub-menu__link\"\r\n                      onClick={() => logOut()}\r\n                    >\r\n                      SIGN OUT\r\n                    </Link>\r\n                  </li>\r\n                </ul>\r\n              </div>\r\n            )}\r\n          </li>\r\n          <li>\r\n            <Link to = '/cart' className=\"navigation-bar__link\">\r\n              <ShoppingCartIcon />\r\n              Cart\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n\r\n      <div className=\"navigation-bar__laptop\"></div>\r\n      {/* <Modal\r\n        show={showLoginModal}\r\n        onCancel={onCloseLogin}\r\n        modalClassName=\"login__modal\"\r\n        header=\"Are you sure?\"\r\n        footer={\r\n          <React.Fragment>\r\n            <button onClick={() => onCloseLogin()}>CANCEL</button>\r\n          </React.Fragment>\r\n        }\r\n      >\r\n        <div className=\"login\">\r\n          <div className=\"row\">\r\n            <CloseIcon\r\n              className=\"login__close\"\r\n              onClick={() => onCloseLogin()}\r\n            />\r\n          </div>\r\n          <div className=\"row login__title\">\r\n            <h1>Login</h1>\r\n          </div>\r\n\r\n          <div className=\"login__form\">\r\n            {loginMode && (\r\n              <div className=\"row\">\r\n                <div className=\"col-sm-4\">\r\n                  <label htmlFor=\"name\">Name:</label>\r\n                </div>\r\n                <div className=\"col-sm-8\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    placeholder=\"Enter name\"\r\n                  />\r\n                </div>\r\n              </div>\r\n            )}\r\n\r\n            <div className=\"row\">\r\n              <div className=\"col-sm-4\">\r\n                <label htmlFor=\"email\">Email address:</label>\r\n              </div>\r\n              <div className=\"col-sm-8\">\r\n                <input\r\n                  type=\"email\"\r\n                  className=\"form-control\"\r\n                  placeholder=\"Enter email\"\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"row\">\r\n              <div className=\"col-sm-4\">\r\n                <label htmlFor=\"password\">Password:</label>\r\n              </div>\r\n              <div className=\"col-sm-8\">\r\n                <input\r\n                  type=\"password\"\r\n                  className=\"form-control\"\r\n                  placeholder=\"Enter password\"\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"row\">\r\n              <button type=\"button\" className=\"btn btn-primary login__button\">\r\n                Login\r\n              </button>\r\n            </div>\r\n\r\n            <div className=\"row\">\r\n              <p\r\n                className=\"switch___link\"\r\n                onClick={() => setLoginMode(!loginMode)}\r\n              >\r\n                {loginMode ? \"Create a new account\" : \"Already have an account\"}\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Modal> */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Navigation;\r\n",["173","174"],"C:\\ReactJS\\E-Commerce\\frontend\\src\\reportWebVitals.js",[],["175","176"],"C:\\ReactJS\\E-Commerce\\frontend\\src\\index.js",[],["177","178"],"C:\\ReactJS\\E-Commerce\\frontend\\src\\shared\\footer\\Footer.js",[],["179","180"],"C:\\ReactJS\\E-Commerce\\frontend\\src\\screens\\HomeScreen.js",["181","182"],"import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport axios from \"axios\";\r\n\r\nimport { listProducts } from \"../global-state/actions/productActions\";\r\n\r\nimport { Row, Col } from \"react-bootstrap\";\r\nimport Product from \"../components/product/Product\";\r\nimport Loader from \"../shared/loader/Loader\";\r\nimport Message from \"../shared/message/Message\";\r\n\r\nconst HomeScreen = () => {\r\n  const dispatch = useDispatch();\r\n  const productList = useSelector((state) => {\r\n    return state.productList;\r\n  });\r\n  const { loading, error, products } = productList;\r\n\r\n  useEffect(() => {\r\n    dispatch(listProducts());\r\n  }, [dispatch]);\r\n\r\n  // const products = [];\r\n\r\n  return (\r\n    <div>\r\n      <h1>Welcome to techbiz</h1>\r\n      <h1>Latest Products</h1>\r\n\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message varient={\"danger\"}>{error}</Message>\r\n      ) : (\r\n        <Row>\r\n          {products.map((product) => {\r\n            return (\r\n              <Col key={product._id} sm={12} md={6} lg={4} xl={3}>\r\n                <Product product={product} />\r\n              </Col>\r\n            );\r\n          })}\r\n        </Row>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HomeScreen;\r\n","C:\\ReactJS\\E-Commerce\\frontend\\src\\components\\product\\Product.js",["183"],"import React from \"react\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { Card, Button } from \"react-bootstrap\";\r\nimport Rating from \"../../shared/rating/Rating\";\r\n\r\nimport \"./Products.css\";\r\n\r\nconst Product = ({ product }) => {\r\n  const addToBasker = () => {};\r\n\r\n  return (\r\n    <Link to={`/product/${product._id}`} style={{ textDecoration: \"none\" }}>\r\n      <Card className=\"my-4 p-4 rounded text-center\">\r\n        <Card.Img src={product.image} varient=\"top\" />\r\n\r\n        <Card.Body>\r\n          <Card.Title>\r\n            <h3>\r\n              <strong>\r\n                {product.name.length > 25\r\n                  ? product.name.substring(0, 25) + \"...\"\r\n                  : product.name}\r\n              </strong>\r\n            </h3>\r\n          </Card.Title>\r\n          <Card.Text as=\"div\">\r\n            <div className=\"my-3\">\r\n              <Rating\r\n                value={product.rating}\r\n                text={`${product.numReviews} reviews`}\r\n              />\r\n              from {product.numReviews} reviews\r\n            </div>\r\n          </Card.Text>\r\n          <Card.Text as=\"h3\">{product.price}</Card.Text>\r\n          <Button variant=\"primary\">ADD TO BASKET</Button>\r\n        </Card.Body>\r\n      </Card>\r\n    </Link>\r\n  );\r\n};\r\n\r\nexport default Product;\r\n",["184","185"],"C:\\ReactJS\\E-Commerce\\frontend\\src\\shared\\card\\Card.js",[],"C:\\ReactJS\\E-Commerce\\frontend\\src\\shared\\rating\\Rating.js",[],"C:\\ReactJS\\E-Commerce\\frontend\\src\\screens\\ProductScreen.js",["186","187","188","189"],"import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { listProductDetails } from \"../global-state/actions/productActions\";\r\n\r\nimport {\r\n  Row,\r\n  Col,\r\n  Image,\r\n  ListGroup,\r\n  Card,\r\n  Button,\r\n  Container,\r\n  Form,\r\n} from \"react-bootstrap\";\r\n\r\nimport Loader from \"../shared/loader/Loader\";\r\nimport Message from \"../shared/message/Message\";\r\nimport Rating from \"../shared/rating/Rating\";\r\n\r\nimport \"./ProductScreen.css\";\r\n\r\nconst ProductScreen = ({ history, match }) => {\r\n  const [qty, setQty] = useState(1);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(listProductDetails(match.params.id));\r\n  }, [match]);\r\n\r\n  const productDetails = useSelector((state) => {\r\n    console.log(state.productDetails);\r\n    return state.productDetails;\r\n  });\r\n\r\n  const { loading, error, product } = productDetails;\r\n\r\n  const addToCartHandler = () => {\r\n    history.push(`/cart/${match.params.id}?qty=${qty}`)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message varient={\"danger\"}>{error}</Message>\r\n      ) : (\r\n        <div>\r\n          <Row>\r\n            <Col md={4}>\r\n              <Image src={product.image} alt={product._id.name} fluid />\r\n            </Col>\r\n            <Col md={4}>\r\n              <ListGroup varient=\"flush\">\r\n                <ListGroup.Item>\r\n                  <h3>{product.name}</h3>\r\n                </ListGroup.Item>\r\n                <ListGroup.Item>\r\n                  <p>\r\n                    <Rating value={product.rating} /> in {product.numReviews}{\" \"}\r\n                    reviews{\" \"}\r\n                  </p>\r\n                </ListGroup.Item>\r\n                <ListGroup.Item>\r\n                  <p className=\"product__description\">\r\n                    <strong style={{ fontWeight: \"bold\", color: \"black\" }}>\r\n                      Brand:{\" \"}\r\n                    </strong>\r\n                    {product.brand}\r\n                  </p>\r\n                </ListGroup.Item>\r\n                <ListGroup.Item>\r\n                  <p className=\"product__description\">{product.description}</p>\r\n                </ListGroup.Item>\r\n                <ListGroup.Item>\r\n                  <p className=\"product__price\">₹ {product.price}</p>\r\n                </ListGroup.Item>\r\n              </ListGroup>\r\n            </Col>\r\n            <Col md={4}>\r\n              <Card className=\"my-4 p-2 rounded text-center\">\r\n                <Card.Body>\r\n                  <Card.Title>\r\n                    <h4>{product.name}</h4>\r\n                  </Card.Title>\r\n                  <Card.Text as=\"div\">\r\n                    <div className=\"my-3\">\r\n                      <Row className = \"py-3\">\r\n                        <Col>\r\n                          <p className=\"product__description\">\r\n                            <strong\r\n                              style={{ fontWeight: \"bold\", color: \"black\" }}\r\n                            >\r\n                              Total Price:\r\n                            </strong>\r\n                          </p>\r\n                        </Col>\r\n                        <Col>\r\n                          <p className=\"product__description\">\r\n                            ₹ {product.price}\r\n                          </p>\r\n                        </Col>\r\n                      </Row>\r\n                      <Row className = \"py-3\">\r\n                        <Col >\r\n                          <p className=\"product__description\">\r\n                            <strong\r\n                              style={{ fontWeight: \"bold\", color: \"black\" }}\r\n                            >\r\n                              Total Stock:\r\n                            </strong>\r\n                          </p>\r\n                        </Col>\r\n                        <Col>\r\n                          <select className = \"product__stock\"\r\n                            value={qty}\r\n                            onChange={(e) => setQty(e.target.value)}\r\n                          >\r\n                            {[...Array(product.countInStock).keys()].map(\r\n                              (x) => (\r\n                                <option key={x + 1} value={x + 1}>\r\n                                  {x + 1}\r\n                                </option>\r\n                              )\r\n                            )}\r\n                          </select>\r\n                        </Col>\r\n                      </Row>\r\n                      <div className=\"py-2\">\r\n                        <Button className=\"product__basket py-3\" onClick = {() => addToCartHandler()}>\r\n                          ADD TO BASKET\r\n                        </Button>\r\n                      </div>\r\n                    </div>\r\n                  </Card.Text>\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProductScreen;\r\n","C:\\ReactJS\\E-Commerce\\frontend\\src\\global-state\\store.js",[],"C:\\ReactJS\\E-Commerce\\frontend\\src\\global-state\\reducers\\productReducers.js",["190","191","192","193","194","195","196","197","198","199","200","201"],"import {\r\n  PRODUCT_LIST_FAIL,\r\n  PRODUCT_LIST_SUCCESS,\r\n  PRODUCT_LIST_REQUEST,\r\n  PRODUCT_DETAILS_FAIL,\r\n  PRODUCT_DETAILS_REQUEST,\r\n  PRODUCT_DETAILS_SUCCESS,\r\n} from \"../../constants/productContants\";\r\n\r\nexport const productListReducer = (\r\n  state = { products: [], loading: true, error: null },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case PRODUCT_LIST_REQUEST:\r\n      {\r\n        return { loading: true, products: [] };\r\n      }\r\n      break;\r\n\r\n    case PRODUCT_LIST_SUCCESS:\r\n      {\r\n        return { loading: false, products: action.payload };\r\n      }\r\n      break;\r\n\r\n    case PRODUCT_LIST_FAIL:\r\n      {\r\n        return { loading: false, error: action.payload };\r\n      }\r\n      break;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const productDetailsReducer = (\r\n  state = { product: { reviews: [] }, loading: true, error: null },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case PRODUCT_DETAILS_REQUEST:\r\n      {\r\n        return { ...state };\r\n      }\r\n      break;\r\n\r\n    case PRODUCT_DETAILS_SUCCESS:\r\n      {\r\n        return { loading: false, product: action.payload };\r\n      }\r\n      break;\r\n\r\n    case PRODUCT_DETAILS_FAIL:\r\n      {\r\n        return { loading: false, error: action.payload };\r\n      }\r\n      break;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n",["202","203"],"C:\\ReactJS\\E-Commerce\\frontend\\src\\constants\\productContants.js",[],"C:\\ReactJS\\E-Commerce\\frontend\\src\\global-state\\actions\\productActions.js",[],"C:\\ReactJS\\E-Commerce\\frontend\\src\\shared\\loader\\Loader.js",[],"C:\\ReactJS\\E-Commerce\\frontend\\src\\shared\\message\\Message.js",[],"C:\\ReactJS\\E-Commerce\\frontend\\src\\constants\\userContants.js",[],"C:\\ReactJS\\E-Commerce\\frontend\\src\\global-state\\reducers\\userLoginReducer.js",["204","205","206","207","208","209","210","211","212","213"],"import {\r\n  USER_DETAILS_FAIL,\r\n  USER_DETAILS_REQUEST,\r\n  USER_DETAILS_SUCCESS,\r\n  USER_LOGIN_FAIL,\r\n  USER_LOGIN_REQUEST,\r\n  USER_LOGIN_SUCCESS,\r\n  USER_LOGOUT,\r\n  USER_UPDATE_DETAILS_FAIL,\r\n  USER_UPDATE_DETAILS_REQUEST,\r\n  USER_UPDATE_DETAILS_SUCCESS,\r\n} from \"../../constants/userContants\";\r\n\r\nexport const userLoginReducer = (\r\n  state = { loading: false, userInfo: null, error: null },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case USER_LOGIN_REQUEST: {\r\n      return { loading: true };\r\n      break;\r\n    }\r\n\r\n    case USER_LOGIN_SUCCESS: {\r\n      return { loading: false, userInfo: action.payload };\r\n      break;\r\n    }\r\n\r\n    case USER_LOGIN_FAIL: {\r\n      return { loading: false, error: action.payload };\r\n      break;\r\n    }\r\n\r\n    case USER_LOGOUT: {\r\n      return { loading: false, userInfo: null, error: null };\r\n      break;\r\n    }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const userDetailsReducer = (\r\n  state = { loading: false, userInfo: null, error: null },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case USER_DETAILS_REQUEST: {\r\n      return { loading: true };\r\n      break;\r\n    }\r\n\r\n    case USER_DETAILS_SUCCESS: {\r\n      return { loading: false, userInfo: action.payload };\r\n      break;\r\n    }\r\n\r\n    case USER_DETAILS_FAIL: {\r\n      return { loading: false, error: action.payload };\r\n      break;\r\n    }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n\r\nexport const userUpdateDetailsUser = (\r\n  state = { loading: false, userInfo: null, success:false, error: null },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case USER_UPDATE_DETAILS_REQUEST: {\r\n      return { loading: true };\r\n      break;\r\n    }\r\n\r\n    case USER_UPDATE_DETAILS_SUCCESS: {\r\n      return { loading: false, success: true, userInfo: action.payload };\r\n      break;\r\n    }\r\n\r\n    case USER_UPDATE_DETAILS_FAIL: {\r\n      return { loading: false, error: action.payload };\r\n      break;\r\n    }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","C:\\ReactJS\\E-Commerce\\frontend\\src\\shared\\form-container\\FormContainer.js",["214","215"],"import React from \"react\";\r\n\r\nimport { Row, Col, Form, Button, Container } from \"react-bootstrap\";\r\n\r\nconst FormContainer = ({ children }) => {\r\n  return (\r\n    <Container>\r\n      <Row className=\"justify-content-md-center\">\r\n        <Col sm = {12} md={8}>{children}</Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default FormContainer;\r\n","C:\\ReactJS\\E-Commerce\\frontend\\src\\global-state\\actions\\userLoginActions.js",[],"C:\\ReactJS\\E-Commerce\\frontend\\src\\shared\\login-modal\\login.js",["216","217"],"import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./login.css\";\r\n\r\nimport { Row, Col, Form, Button } from \"react-bootstrap\";\r\nimport Loader from \"../loader/Loader\";\r\nimport Message from \"../message/Message\";\r\nimport { login, register } from \"../../global-state/actions/userLoginActions\";\r\nimport FormContainer from \"../form-container/FormContainer\";\r\n\r\nconst LoginScreen = (props) => {\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [loginMode, setLoginMode] = useState(true);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n\r\n  const { loading, userInfo, error } = userLogin;\r\n\r\n  console.log(props.history, props.location);\r\n\r\n  const redirect = props.location.search\r\n    ? props.location.search.split(\"=\")[1]\r\n    : \"/\";\r\n\r\n  useEffect(() => {\r\n    if (userInfo) {\r\n      props.history.push(redirect);\r\n    }\r\n  }, [props.history, userInfo, redirect]);\r\n\r\n  const submitForm = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (loginMode) {\r\n      dispatch(login(email, password));\r\n    } else {\r\n      dispatch(register(name, email, password));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"login__content\">\r\n      <h1>Sign-In</h1>\r\n      {error && <Message varient=\"danger\">{error}</Message>}\r\n      {loading && <Loader />}\r\n      <Form onSubmit={(e) => submitForm(e)}>\r\n        {!loginMode && (\r\n          <Form.Group controlId=\"name\">\r\n            <Form.Label>Email Name</Form.Label>\r\n            <Form.Control\r\n              type=\"name\"\r\n              placeholder=\"Enter name\"\r\n              onChange={(e) => setName(e.target.value)}\r\n            />\r\n          </Form.Group>\r\n        )}\r\n\r\n        <Form.Group controlId=\"email\">\r\n          <Form.Label>Email Address</Form.Label>\r\n          <Form.Control\r\n            type=\"email\"\r\n            placeholder=\"Enter email\"\r\n            onChange={(e) => setEmail(e.target.value)}\r\n          />\r\n        </Form.Group>\r\n        <Form.Group controlId=\"password\">\r\n          <Form.Label>Password</Form.Label>\r\n          <Form.Control\r\n            type=\"password\"\r\n            placeholder=\"Enter password\"\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          />\r\n        </Form.Group>\r\n\r\n        <div className=\"w-100\">\r\n          <Button type=\"submit\" varient=\"primary\" className = \"login__button\">\r\n            {loginMode ? \"Login\" : \"Register\"}\r\n          </Button>\r\n        </div>\r\n      </Form>\r\n\r\n      <Row className=\"py-5\">\r\n        <Col>\r\n          {loginMode ? (\r\n            <p>\r\n              New Customer\r\n              <span onClick={() => setLoginMode(false)}>Register</span>\r\n            </p>\r\n          ) : (\r\n            <p>\r\n              Already a customer\r\n              <span onClick={() => setLoginMode(true)}>Login</span>\r\n            </p>\r\n          )}\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginScreen;\r\n","C:\\ReactJS\\E-Commerce\\frontend\\src\\screens\\CartScreen.js",["218","219","220","221"],"import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport { addToCart } from \"../global-state/actions/cartActions\";\r\nimport Message from \"../shared/message/Message\";\r\n\r\nimport \"./CartScreen.css\";\r\n\r\nimport {\r\n  Row,\r\n  Col,\r\n  Image,\r\n  ListGroup,\r\n  Card,\r\n  Button,\r\n  Container,\r\n  Form,\r\n} from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst CartScreen = ({ match, location, history }) => {\r\n  const productId = match.params.id;\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const qty = location.search ? Number(location.search.split(\"=\")[1]) : 1;\r\n\r\n  const cart = useSelector((state) => state.cart);\r\n\r\n  const { cartItems } = cart;\r\n\r\n  console.log(qty, productId);\r\n  const [removeQty, setRemoveQty] = useState(qty);\r\n\r\n  useEffect(() => {\r\n    if (productId) {\r\n      dispatch(addToCart(productId, qty));\r\n    }\r\n  }, [dispatch, productId, qty]);\r\n\r\n  return (\r\n    <>\r\n      <Row>\r\n        <Col md={8}>\r\n          <Row>\r\n            <h1>SHOPPING CART</h1>\r\n          </Row>\r\n          <Row>\r\n            <h3>Total number of items: {cartItems.length}</h3>\r\n          </Row>\r\n          <Row className=\"cart__content\">\r\n            <ListGroup varient=\"flush\">\r\n              {cartItems.map((cartItem) => {\r\n                return (\r\n                  <ListGroup.Item>\r\n                    <Row>\r\n                      <Col xs={2}>1</Col>\r\n                      <Col xs={5}>\r\n                        <h6>{cartItem.name}</h6>\r\n                      </Col>\r\n                      <Col xs={1}>{cartItem.countInStock}</Col>\r\n                      <Col xs={2}>\r\n                        <select\r\n                          className=\"cartScreen__stock\"\r\n                          value={removeQty}\r\n                          onChange={(e) => setRemoveQty(e.target.value)}\r\n                        >\r\n                          {[...Array(cartItem.countInStock).keys()].map((x) => (\r\n                            <option key={x + 1} value={x + 1}>\r\n                              {x + 1}\r\n                            </option>\r\n                          ))}\r\n                        </select>\r\n                      </Col>\r\n                    </Row>\r\n                  </ListGroup.Item>\r\n                );\r\n              })}\r\n            </ListGroup>\r\n          </Row>\r\n        </Col>\r\n\r\n        <Col md={4}>\r\n          <Card className=\"p-2\">\r\n            <h1 className=\"p-2\">SUBTOTALS ITEMS</h1>\r\n\r\n            <div className=\"py-5\">\r\n              <Link to=\"/checkout-component\">\r\n                <Button className=\"w-100 px-2\">PROCEED TO CHECKOUT</Button>\r\n              </Link>\r\n            </div>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CartScreen;\r\n","C:\\ReactJS\\E-Commerce\\frontend\\src\\constants\\cartConstants.js",[],["222","223"],"C:\\ReactJS\\E-Commerce\\frontend\\src\\global-state\\reducers\\cartReducers.js",[],"C:\\ReactJS\\E-Commerce\\frontend\\src\\global-state\\actions\\cartActions.js",[],"C:\\ReactJS\\E-Commerce\\frontend\\src\\global-state\\reducers\\userRegisterReducers.js",["224","225","226"],"import { USER_REGISTER_FAIL, USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS } from \"../../constants/userContants\";\r\n\r\nexport const userRegisterReducer = (\r\n    state = { loading: false, userInfo: null, error: null },\r\n    action\r\n  ) => {\r\n    switch (action.type) {\r\n      case USER_REGISTER_REQUEST:\r\n        {\r\n          return { loading: true };\r\n          break;\r\n        }\r\n  \r\n      case USER_REGISTER_SUCCESS:\r\n        {\r\n          return { loading: false, userInfo: action.payload };\r\n          break;\r\n        }\r\n  \r\n      case USER_REGISTER_FAIL:\r\n        {\r\n          return { loading: false, error: action.payload };\r\n          break;\r\n        }\r\n        \r\n      default:\r\n        return state;\r\n    }\r\n  };\r\n  ","C:\\ReactJS\\E-Commerce\\frontend\\src\\screens\\ProfileScreen.js",["227","228","229","230"],"import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport axios from \"axios\";\r\n\r\nimport \"./ProfileScreen.css\"\r\n\r\nimport { Row, Col, Form, Button } from \"react-bootstrap\";\r\nimport Loader from \"../shared/loader/Loader\";\r\nimport Message from \"../shared/message/Message\";\r\nimport {\r\n  userDetailsAction,\r\n  userUpdateDetailsAction,\r\n} from \"../global-state/actions/userLoginActions\";\r\nimport FormContainer from \"../shared/form-container/FormContainer\";\r\nimport OrderItem from \"../components/order-item/OrderItem\";\r\n\r\nconst ProfileScreen = (props) => {\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [loginMode, setLoginMode] = useState(true);\r\n  const [customerOrderDetails, setCustomerOrderDetails] = useState(null);\r\n  const [loadingCustomerDetails, setLoadingCustomerDetails] = useState(true);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n\r\n  const userDetailsUpdate = useSelector((state) => state.userUpdate);\r\n\r\n  const { success } = userDetailsUpdate;\r\n\r\n  const { loading, userInfo, error } = userLogin;\r\n\r\n  const redirect = props.location.search\r\n    ? props.location.search.split(\"=\")[1]\r\n    : \"/\";\r\n\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      dispatch(userDetailsAction(\"profile\"));\r\n    } else {\r\n      setEmail(userInfo.email);\r\n      setName(userInfo.name);\r\n    }\r\n\r\n    const getOrderDetails = async () => {\r\n      console.log(\"Data\", userInfo.token);\r\n\r\n      const config = {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer ${userInfo.token}`,\r\n        },\r\n      };\r\n\r\n      const id = {\r\n        user: userInfo._id,\r\n      };\r\n\r\n      const { data } = await axios.get(\r\n        `/api/orders/details/${userInfo._id}`,\r\n        config\r\n      );\r\n\r\n      setCustomerOrderDetails(data);\r\n      setLoadingCustomerDetails(false);\r\n      console.log(\"Data\", data);\r\n    };\r\n\r\n    console.log(\"UserInfo\", userInfo.token);\r\n    getOrderDetails();\r\n  }, [props.history, userInfo, redirect]);\r\n\r\n  const submitForm = (e) => {\r\n    e.preventDefault();\r\n\r\n    dispatch(\r\n      userUpdateDetailsAction({\r\n        email,\r\n        name,\r\n        password,\r\n      })\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Row>\r\n        <Col md={6}>\r\n          <FormContainer>\r\n            <h1>My Profile</h1>\r\n            {error && <Message varient=\"danger\">{error}</Message>}\r\n            {success && <Message varient=\"success\">Profile Updated</Message>}\r\n            {loading && <Loader />}\r\n            <Form onSubmit={(e) => submitForm(e)}>\r\n              <Form.Group controlId=\"name\">\r\n                <Form.Label>Email Name</Form.Label>\r\n                <Form.Control\r\n                  type=\"name\"\r\n                  value={name}\r\n                  placeholder=\"Enter name\"\r\n                  onChange={(e) => setName(e.target.value)}\r\n                />\r\n              </Form.Group>\r\n\r\n              <Form.Group controlId=\"email\">\r\n                <Form.Label>Email Address</Form.Label>\r\n                <Form.Control\r\n                  type=\"email\"\r\n                  value={email}\r\n                  placeholder=\"Enter email\"\r\n                  onChange={(e) => setEmail(e.target.value)}\r\n                />\r\n              </Form.Group>\r\n              <Form.Group controlId=\"password\">\r\n                <Form.Label>Password</Form.Label>\r\n                <Form.Control\r\n                  type=\"password\"\r\n                  placeholder=\"Enter password\"\r\n                  onChange={(e) => setPassword(e.target.value)}\r\n                />\r\n              </Form.Group>\r\n\r\n              <Button type=\"submit\" varient=\"primary\">\r\n                Update\r\n              </Button>\r\n            </Form>\r\n          </FormContainer>\r\n        </Col>\r\n        <Col md={6} className = \"customer__orders\">\r\n          <h1>My Orders</h1>\r\n          {!loadingCustomerDetails\r\n            ? customerOrderDetails.orderItems.map((item) => {\r\n                return <OrderItem item={item} />;\r\n              })\r\n            : null}\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProfileScreen;\r\n","C:\\ReactJS\\E-Commerce\\frontend\\src\\screens\\CheckoutComponents.js",["231","232","233","234","235"],"import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./CheckoutComponents.css\";\r\nimport { saveShippingAddress } from \"../global-state/actions/cartActions\";\r\nimport { createOrderAction } from \"../global-state/actions/orderActions\";\r\n\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { Button, Col, ListGroup, Row, Image } from \"react-bootstrap\";\r\nimport { Card } from \"@material-ui/core\";\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`full-width-tabpanel-${index}`}\r\n      aria-labelledby={`full-width-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && <Typography>{children}</Typography>}\r\n    </div>\r\n  );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.any.isRequired,\r\n  value: PropTypes.any.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `full-width-tab-${index}`,\r\n    \"aria-controls\": `full-width-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nexport const CheckoutComponents = ({ history }) => {\r\n  let totalCost = 0;\r\n\r\n  const [address, setAddress] = useState();\r\n  const [city, setCity] = useState();\r\n  const [postalCode, setPostalCode] = useState();\r\n  const [country, setCountry] = useState();\r\n  const [tabNumber, setTabNumber] = useState(0);\r\n  const [paymentMethod, setPaymentMethod] = useState(false);\r\n\r\n  const [loading, setloading] = useState(true);\r\n  const [userData, setUserData] = useState();\r\n  const [loadingUserData, setLoadingUserData] = useState(true);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const { shippingDetails, cartItems } = useSelector((state) => {\r\n    return state.cart;\r\n  });\r\n\r\n  const { userInfo } = useSelector((state) => {\r\n    return state.userLogin;\r\n  });\r\n\r\n  const { success } = useSelector((state) => {\r\n    return state.orderState;\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (shippingDetails) {\r\n      setAddress(shippingDetails.address);\r\n      setCity(shippingDetails.city);\r\n      setPostalCode(shippingDetails.postalCode);\r\n      setCountry(shippingDetails.country);\r\n    }\r\n\r\n    if (cartItems) {\r\n      setloading(false);\r\n    }\r\n\r\n    if (userInfo) {\r\n      console.log(userInfo);\r\n      setUserData(userInfo);\r\n      setLoadingUserData(false);\r\n    }\r\n\r\n    if (success) {\r\n      history.push(\"/\");\r\n    }\r\n  }, [setAddress, setCity, setPostalCode, setCountry, cartItems]);\r\n\r\n  const shippingDetailsSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    console.log(\"Shipping Details\");\r\n\r\n    dispatch(\r\n      saveShippingAddress({\r\n        address,\r\n        city,\r\n        postalCode,\r\n        country,\r\n      })\r\n    );\r\n  };\r\n\r\n  const onTabChange = (e, tabNumber) => {\r\n    setTabNumber(tabNumber);\r\n  };\r\n\r\n  const checkoutHandler = () => {\r\n    let orderDetails = {\r\n      user: userData._id,\r\n      orderItems: cartItems,\r\n      shippingAddress: {\r\n        address,\r\n        city,\r\n        postalCode,\r\n        country,\r\n      },\r\n      paymentMethod: \"Cash On Delivery\",\r\n      totalPrice: totalCost,\r\n    };\r\n\r\n    dispatch(createOrderAction(orderDetails));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Tabs value={tabNumber} className=\"tab__number\" onChange={onTabChange}>\r\n        <Tab label=\"SHIPPING DETAILS\" {...a11yProps(0)} />\r\n        <Tab label=\"PAYMENT METHOD\" {...a11yProps(1)} />\r\n        <Tab label=\"CHECKOUT REVIEW\" {...a11yProps(2)} />\r\n      </Tabs>\r\n      <hr></hr>\r\n\r\n      <TabPanel value={tabNumber} index={0}>\r\n        <div className=\"shipping__content\">\r\n          <h2 className=\"shipping__content__title\">Shipping Address</h2>\r\n          <form onSubmit={(e) => shippingDetailsSubmit(e)}>\r\n            <div className=\"row\">\r\n              <div className=\"form-group\">\r\n                <label className=\"form-label\">Address:</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  placeholder=\"Enter Address\"\r\n                  value={address}\r\n                  onChange={(e) => setAddress(e.target.value)}\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"row\">\r\n              <div className=\"form-group\">\r\n                <label className=\"form-label\">City:</label>\r\n\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  placeholder=\"Enter City\"\r\n                  value={city}\r\n                  onChange={(e) => setCity(e.target.value)}\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"row\">\r\n              <div className=\"form-group\">\r\n                <label className=\"form-label\">Postal Code:</label>\r\n\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  placeholder=\"Enter Postal Code\"\r\n                  value={postalCode}\r\n                  onChange={(e) => setPostalCode(e.target.value)}\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"row\">\r\n              <div className=\"form-group\">\r\n                <label className=\"form-label\">Country:</label>\r\n\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  placeholder=\"Enter Country\"\r\n                  valuse={country}\r\n                  onChange={(e) => setCountry(e.target.value)}\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"row\">\r\n              <div className=\"form-group\">\r\n                <Button\r\n                  type=\"submit\"\r\n                  varient=\"primary\"\r\n                  className=\"shipping__submit\"\r\n                >\r\n                  Submit\r\n                </Button>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </TabPanel>\r\n      <TabPanel value={tabNumber} index={1}>\r\n        <div className=\"payment__method\">\r\n          <h2 className=\"payment__method__title\">PAYMENT METHOD</h2>\r\n          <p>Cash On Delivery</p>\r\n        </div>\r\n      </TabPanel>\r\n      <TabPanel value={tabNumber} index={2}>\r\n        <Row>\r\n          <Col md={8}>\r\n            <div className=\"checkout__details\">\r\n              <div className=\"checkout__details__component\">\r\n                <h2>PAYMENT METHOD</h2>\r\n                <hr />\r\n                <p>\r\n                  <strong>Method:</strong>Cash On Delivery\r\n                </p>\r\n              </div>\r\n              <div className=\"checkout__details__component\">\r\n                <h2>MY ORDER</h2>\r\n                <hr />\r\n\r\n                {loading ? null : (\r\n                  <ListGroup varient=\"flush\">\r\n                    {cartItems.map((cartItem, index) => {\r\n                      return (\r\n                        <ListGroup.Item key={index}>\r\n                          <Row>\r\n                            <Col md={1}>\r\n                              <Image\r\n                                src={cartItem.image}\r\n                                alt={cartItem.name}\r\n                                fluid\r\n                                rounded\r\n                              />\r\n                            </Col>\r\n                            <Col>\r\n                              <Link to={`/products/${cartItem.product}`}>\r\n                                {cartItem.name}\r\n                              </Link>\r\n                            </Col>\r\n                            <Col md={4}>\r\n                              {`${cartItem.qty} x ${cartItem.price} = ${\r\n                                cartItem.qty * cartItem.price\r\n                              }`}\r\n                            </Col>\r\n                          </Row>\r\n                        </ListGroup.Item>\r\n                      );\r\n                    })}\r\n                  </ListGroup>\r\n                )}\r\n              </div>\r\n\r\n              <div className=\"checkout__details__component\">\r\n                <h2>MY DETAILS</h2>\r\n                {loadingUserData ? null : (\r\n                  <div className=\"customer__details\">\r\n                    <table className=\"table\">\r\n                      <tr>\r\n                        <td>Name:</td>\r\n                        <td>{userData.name}</td>\r\n                      </tr>\r\n                      <tr>\r\n                        <td>Email:</td>\r\n                        <td>{userData.email}</td>\r\n                      </tr>\r\n                      <tr>\r\n                        <td>Address:</td>\r\n                        <td>{address}</td>\r\n                      </tr>\r\n                      <tr>\r\n                        <td>City:</td>\r\n                        <td>{city}</td>\r\n                      </tr>\r\n                      <tr>\r\n                        <td>Postal Code:</td>\r\n                        <td>{postalCode}</td>\r\n                      </tr>\r\n                      <tr>\r\n                        <td>Country;</td>\r\n                        <td>{country}</td>\r\n                      </tr>\r\n                    </table>\r\n                  </div>\r\n                )}\r\n\r\n                <hr />\r\n              </div>\r\n            </div>\r\n          </Col>\r\n          <Col md={4}>\r\n            <Card className=\"checkout__summary\">\r\n              <h2>PRODUCT SUMMARY</h2>\r\n              <table className=\"table\">\r\n                {cartItems.map((cartItem) => {\r\n                  totalCost = totalCost + cartItem.price * cartItem.qty;\r\n\r\n                  return (\r\n                    <tr>\r\n                      <td>{cartItem.name}</td>\r\n                      <td>\r\n                        <strong>{cartItem.price * cartItem.qty}</strong>\r\n                      </td>\r\n                    </tr>\r\n                  );\r\n                })}\r\n                <tfoot>\r\n                  <hr />\r\n                  <tr>\r\n                    <th>\r\n                      <strong>Total Cost</strong>\r\n                    </th>\r\n                    <th>\r\n                      <strong>{totalCost}</strong>\r\n                    </th>\r\n                  </tr>\r\n                </tfoot>\r\n              </table>\r\n\r\n              <Button className=\"w-100\" onClick={() => checkoutHandler()}>\r\n                CHECKOUT\r\n              </Button>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n      </TabPanel>\r\n    </>\r\n  );\r\n};\r\n","C:\\ReactJS\\E-Commerce\\frontend\\src\\constants\\orderConstants.js",[],"C:\\ReactJS\\E-Commerce\\frontend\\src\\global-state\\reducers\\orderReducers.js",["236","237","238","239","240","241"],"import { ORDER_CREATE_FAIL, ORDER_CREATE_REQUEST, ORDER_CREATE_SUCCESS } from \"../../constants/orderConstants\";\r\n\r\nexport const createOrder = (\r\n    state = { orderDetails: null, loading: false, success: false, error: null },\r\n    action\r\n  ) => {\r\n    switch (action.type) {\r\n      case ORDER_CREATE_REQUEST:\r\n        {\r\n          return { loading: true };\r\n        }\r\n        break;\r\n  \r\n      case ORDER_CREATE_SUCCESS:\r\n        {\r\n          return { loading: false, orderDetails: action.payload, success:true };\r\n        }\r\n        break;\r\n  \r\n      case ORDER_CREATE_FAIL:\r\n        {\r\n          return { loading: false, error: action.payload, success: false };\r\n        }\r\n        break;\r\n  \r\n      default:\r\n        return state;\r\n    }\r\n  };\r\n\r\n  ","C:\\ReactJS\\E-Commerce\\frontend\\src\\global-state\\actions\\orderActions.js",[],"C:\\ReactJS\\E-Commerce\\frontend\\src\\components\\order-item\\OrderItem.js",["242"],"import React from 'react'\r\n\r\nimport './OrderItem.css';\r\n\r\nconst OrderItem = ({item}) => {\r\n    return (\r\n        <div className = \"order-item\">\r\n            <div className = \"row\">\r\n                <div className = \"col-md-4\">\r\n                    <img src = {item.image} className = \"order-item__image\" />\r\n                </div>\r\n                <div className = \"col-md-8\">\r\n                    <h3>{item.name}</h3>\r\n                    <p>{item.qty}</p>\r\n                    <h4>{item.price}</h4>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default OrderItem;\r\n","C:\\ReactJS\\E-Commerce\\frontend\\src\\screens\\AdminScreen.js",["243"],"C:\\ReactJS\\E-Commerce\\frontend\\src\\screens\\AddProductScreen.js",["244","245","246"],"import React, { Component } from \"react\";\r\nimport { connect } from 'react-redux';\r\n\r\nimport axios from \"axios\";\r\n\r\nimport { Container, Button, Alert } from \"react-bootstrap\";\r\n\r\nimport Loader from \"../shared/loader/Loader\";\r\n\r\nimport {\r\n  validate,\r\n  VALIDATOR_TYPE_REQUIRE,\r\n} from \"../shared/validators/validators\";\r\n\r\nimport \"./AddProductScreen.css\";\r\n\r\nexport default class AddProductScreen extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      name: {\r\n        value: \"\",\r\n        errors: {\r\n          required: false,\r\n        },\r\n        touched: false,\r\n      },\r\n      brand: {\r\n        value: \"\",\r\n        errors: {\r\n          required: false,\r\n        },\r\n        touched: false,\r\n      },\r\n      category: {\r\n        value: \"\",\r\n        errors: {\r\n          required: false,\r\n        },\r\n        touched: false,\r\n      },\r\n      description: {\r\n        value: \"\",\r\n        errors: {\r\n          required: false,\r\n        },\r\n        touched: false,\r\n      },\r\n      price: {\r\n        value: 0,\r\n        errors: {\r\n          required: false,\r\n        },\r\n        touched: false,\r\n      },\r\n      countInStock: {\r\n        value: 0,\r\n        errors: {\r\n          required: false,\r\n        },\r\n        touched: false,\r\n      },\r\n      image:{\r\n        value:''\r\n      },\r\n      error: false,\r\n      upload: false,\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    console.log(\"Add Product Screen\");\r\n  }\r\n\r\n  handleChange(e, title) {\r\n    let value = e.target.value;\r\n\r\n    switch (title) {\r\n      case \"name\": {\r\n        this.setState({\r\n          [title]: {\r\n            ...this.state[title],\r\n            value: value,\r\n            errors: {\r\n              required: validate(value, VALIDATOR_TYPE_REQUIRE),\r\n            },\r\n          },\r\n        });\r\n\r\n        break;\r\n      }\r\n      case \"brand\": {\r\n        this.setState({\r\n          [title]: {\r\n            ...this.state[title],\r\n            value: value,\r\n            errors: {\r\n              required: validate(value, VALIDATOR_TYPE_REQUIRE),\r\n            },\r\n            error:\r\n              this.state.brand.touched && this.state.brand.errors?.required,\r\n          },\r\n        });\r\n\r\n        break;\r\n      }\r\n      case \"category\": {\r\n        this.setState({\r\n          [title]: {\r\n            ...this.state[title],\r\n            value: value,\r\n            errors: {\r\n              required: validate(value, VALIDATOR_TYPE_REQUIRE),\r\n            },\r\n            error:\r\n              this.state.category.touched &&\r\n              this.state.category.errors?.required,\r\n          },\r\n        });\r\n\r\n        break;\r\n      }\r\n\r\n      case \"description\": {\r\n        this.setState({\r\n          [title]: {\r\n            ...this.state[title],\r\n            value: value,\r\n            errors: {\r\n              required: validate(value, VALIDATOR_TYPE_REQUIRE),\r\n            },\r\n            error:\r\n              this.state.description.touched &&\r\n              this.state.description.errors?.required,\r\n          },\r\n        });\r\n\r\n        break;\r\n      }\r\n      case \"price\": {\r\n        this.setState({\r\n          [title]: {\r\n            ...this.state[title],\r\n            value: value,\r\n            errors: {\r\n              required: validate(value, VALIDATOR_TYPE_REQUIRE),\r\n            },\r\n            error:\r\n              this.state.price.touched && this.state.price.errors?.required,\r\n          },\r\n        });\r\n\r\n        break;\r\n      }\r\n      case \"countInStock\": {\r\n        this.setState({\r\n          [title]: {\r\n            ...this.state[title],\r\n            value: value,\r\n            errors: {\r\n              required: validate(value, VALIDATOR_TYPE_REQUIRE),\r\n            },\r\n            error:\r\n              this.state.countInStock.touched &&\r\n              this.state.countInStock.errors?.required,\r\n          },\r\n        });\r\n\r\n        break;\r\n      }\r\n    }\r\n\r\n    console.log(this.state);\r\n  }\r\n\r\n  onTouchHandler(title) {\r\n    this.setState({\r\n      [title]: {\r\n        ...this.state[title],\r\n        touched: true,\r\n      },\r\n      error: this.state[title].touched && !this.state[title].errors?.required,\r\n    });\r\n  }\r\n\r\n  async onUploadHandler(e) {\r\n    console.log(\"Image uploader\");\r\n    const file = e.target.files[0];\r\n    const formData = new FormData();\r\n    \r\n    formData.append('image', file);\r\n    console.log(formData, file);\r\n\r\n    this.setState({\r\n      upload: true,\r\n    });\r\n\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data',\r\n        },\r\n      };\r\n\r\n      const { data } = await axios.post(\"/api/upload\", formData, config);\r\n      this.setState({\r\n        upload: false,\r\n      });\r\n\r\n      console.log(data);\r\n\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  }\r\n\r\n  onSubmitHandler(e) {\r\n    e.preventDefault();\r\n    console.log(this.state);\r\n    let productData = {\r\n\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"add-product\">\r\n        <Container>\r\n          <form onSubmit={(e) => this.onSubmitHandler(e)}>\r\n            <div className=\"row\">\r\n              <div className=\"form-group\">\r\n                <label className=\"form-label\">Name:</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  placeholder=\"Enter Name\"\r\n                  onBlur={() => this.onTouchHandler(\"name\")}\r\n                  onChange={(e) => this.handleChange(e, \"name\")}\r\n                />\r\n                {this.state.name.touched ? (\r\n                  !this.state.name.errors.required ? (\r\n                    <div>\r\n                      <Alert variant=\"danger\">\r\n                        Please enter the product name\r\n                      </Alert>\r\n                    </div>\r\n                  ) : null\r\n                ) : null}\r\n              </div>\r\n            </div>\r\n            <div className=\"row\">\r\n              <div className=\"form-group\">\r\n                <label className=\"form-label\">Brand:</label>\r\n\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  placeholder=\"Enter Brand\"\r\n                  onBlur={() => this.onTouchHandler(\"brand\")}\r\n                  onChange={(e) => this.handleChange(e, \"brand\")}\r\n                />\r\n                {this.state.brand.touched ? (\r\n                  !this.state.brand.errors.required ? (\r\n                    <div>\r\n                      <Alert variant=\"danger\">\r\n                        Please enter the brand name\r\n                      </Alert>\r\n                    </div>\r\n                  ) : null\r\n                ) : null}\r\n              </div>\r\n            </div>\r\n            <div className=\"row\">\r\n              <div className=\"form-group\">\r\n                <label className=\"form-label\">Category:</label>\r\n                <select\r\n                  className=\"form-control form-select form-select-sm\"\r\n                  id=\"exampleFormControlSelect1\"\r\n                  placeholder=\"Enter Category\"\r\n                  value={this.state.category.value}\r\n                  onBlur={() => this.onTouchHandler(\"category\")}\r\n                  onChange={(e) => this.handleChange(e, \"category\")}\r\n                >\r\n                  <option value=\"laptop\">laptop</option>\r\n                  <option value=\"desktop\">desktop</option>\r\n                  <option value=\"mobile\">mobile</option>\r\n                </select>\r\n              </div>\r\n            </div>\r\n            <div className=\"row\">\r\n              <div className=\"form-group\">\r\n                <label className=\"form-label\">Description:</label>\r\n\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  placeholder=\"Enter Description\"\r\n                  onBlur={() => this.onTouchHandler(\"description\")}\r\n                  onChange={(e) => this.handleChange(e, \"description\")}\r\n                />\r\n                {this.state.description.touched ? (\r\n                  !this.state.description.errors.required ? (\r\n                    <div>\r\n                      <Alert variant=\"danger\">\r\n                        Please enter the description name\r\n                      </Alert>\r\n                    </div>\r\n                  ) : null\r\n                ) : null}\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label className=\"form-label\">Price:</label>\r\n\r\n              <input\r\n                type=\"number\"\r\n                className=\"form-control\"\r\n                placeholder=\"Enter Price\"\r\n                onBlur={() => this.onTouchHandler(\"price\")}\r\n                onChange={(e) => this.handleChange(e, \"price\")}\r\n              />\r\n              {this.state.price.touched ? (\r\n                !this.state.price.errors.required ? (\r\n                  <div>\r\n                    <Alert variant=\"danger\">Please enter the price name</Alert>\r\n                  </div>\r\n                ) : null\r\n              ) : null}\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label className=\"form-label\">Count In Stock:</label>\r\n\r\n              <input\r\n                type=\"number\"\r\n                className=\"form-control\"\r\n                placeholder=\"Enter Total Stock\"\r\n                onBlur={() => this.onTouchHandler(\"countInStock\")}\r\n                onChange={(e) => this.handleChange(e, \"countInStock\")}\r\n              />\r\n              {this.state.countInStock.touched ? (\r\n                !this.state.countInStock.errors.required ? (\r\n                  <div>\r\n                    <Alert variant=\"danger\">\r\n                      Please enter the count in stock name\r\n                    </Alert>\r\n                  </div>\r\n                ) : null\r\n              ) : null}\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label className=\"form-label\">Image:</label>\r\n\r\n              <input\r\n                type=\"file\"\r\n                className=\"form-control\"\r\n                placeholder=\"Enter Image\"\r\n                onChange={(e) => this.onUploadHandler(e)}\r\n              />\r\n            </div>\r\n            {this.state.upload && <Loader />}\r\n            <div className=\"row\">\r\n              <div className=\"form-group\">\r\n                <Button\r\n                  type=\"submit\"\r\n                  varient=\"primary\"\r\n                  className=\"shipping__submit\"\r\n                  disabled={!this.state.error}\r\n                >\r\n                  Submit\r\n                </Button>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","C:\\ReactJS\\E-Commerce\\frontend\\src\\shared\\validators\\validators.js",[],{"ruleId":"247","severity":1,"message":"248","line":2,"column":42,"nodeType":"249","messageId":"250","endLine":2,"endColumn":46},{"ruleId":"247","severity":1,"message":"251","line":4,"column":10,"nodeType":"249","messageId":"250","endLine":4,"endColumn":19},{"ruleId":"252","replacedBy":"253"},{"ruleId":"254","replacedBy":"255"},{"ruleId":"247","severity":1,"message":"256","line":10,"column":8,"nodeType":"249","messageId":"250","endLine":10,"endColumn":14},{"ruleId":"247","severity":1,"message":"257","line":11,"column":8,"nodeType":"249","messageId":"250","endLine":11,"endColumn":17},{"ruleId":"247","severity":1,"message":"258","line":13,"column":8,"nodeType":"249","messageId":"250","endLine":13,"endColumn":18},{"ruleId":"252","replacedBy":"259"},{"ruleId":"254","replacedBy":"260"},{"ruleId":"252","replacedBy":"261"},{"ruleId":"254","replacedBy":"262"},{"ruleId":"252","replacedBy":"263"},{"ruleId":"254","replacedBy":"264"},{"ruleId":"252","replacedBy":"265"},{"ruleId":"254","replacedBy":"266"},{"ruleId":"247","severity":1,"message":"267","line":1,"column":17,"nodeType":"249","messageId":"250","endLine":1,"endColumn":25},{"ruleId":"247","severity":1,"message":"268","line":3,"column":8,"nodeType":"249","messageId":"250","endLine":3,"endColumn":13},{"ruleId":"247","severity":1,"message":"269","line":11,"column":9,"nodeType":"249","messageId":"250","endLine":11,"endColumn":20},{"ruleId":"252","replacedBy":"270"},{"ruleId":"254","replacedBy":"271"},{"ruleId":"247","severity":1,"message":"248","line":4,"column":10,"nodeType":"249","messageId":"250","endLine":4,"endColumn":14},{"ruleId":"247","severity":1,"message":"251","line":15,"column":3,"nodeType":"249","messageId":"250","endLine":15,"endColumn":12},{"ruleId":"247","severity":1,"message":"272","line":16,"column":3,"nodeType":"249","messageId":"250","endLine":16,"endColumn":7},{"ruleId":"273","severity":1,"message":"274","line":32,"column":6,"nodeType":"275","endLine":32,"endColumn":13,"suggestions":"276"},{"ruleId":"277","severity":1,"message":"278","line":16,"column":7,"nodeType":"279","messageId":"280","endLine":18,"endColumn":8},{"ruleId":"281","severity":1,"message":"282","line":19,"column":7,"nodeType":"283","messageId":"284","endLine":19,"endColumn":13},{"ruleId":"277","severity":1,"message":"278","line":22,"column":7,"nodeType":"279","messageId":"280","endLine":24,"endColumn":8},{"ruleId":"281","severity":1,"message":"282","line":25,"column":7,"nodeType":"283","messageId":"284","endLine":25,"endColumn":13},{"ruleId":"277","severity":1,"message":"278","line":28,"column":7,"nodeType":"279","messageId":"280","endLine":30,"endColumn":8},{"ruleId":"281","severity":1,"message":"282","line":31,"column":7,"nodeType":"283","messageId":"284","endLine":31,"endColumn":13},{"ruleId":"277","severity":1,"message":"278","line":44,"column":7,"nodeType":"279","messageId":"280","endLine":46,"endColumn":8},{"ruleId":"281","severity":1,"message":"282","line":47,"column":7,"nodeType":"283","messageId":"284","endLine":47,"endColumn":13},{"ruleId":"277","severity":1,"message":"278","line":50,"column":7,"nodeType":"279","messageId":"280","endLine":52,"endColumn":8},{"ruleId":"281","severity":1,"message":"282","line":53,"column":7,"nodeType":"283","messageId":"284","endLine":53,"endColumn":13},{"ruleId":"277","severity":1,"message":"278","line":56,"column":7,"nodeType":"279","messageId":"280","endLine":58,"endColumn":8},{"ruleId":"281","severity":1,"message":"282","line":59,"column":7,"nodeType":"283","messageId":"284","endLine":59,"endColumn":13},{"ruleId":"252","replacedBy":"285"},{"ruleId":"254","replacedBy":"286"},{"ruleId":"281","severity":1,"message":"282","line":21,"column":7,"nodeType":"283","messageId":"284","endLine":21,"endColumn":13},{"ruleId":"281","severity":1,"message":"282","line":26,"column":7,"nodeType":"283","messageId":"284","endLine":26,"endColumn":13},{"ruleId":"281","severity":1,"message":"282","line":31,"column":7,"nodeType":"283","messageId":"284","endLine":31,"endColumn":13},{"ruleId":"281","severity":1,"message":"282","line":36,"column":7,"nodeType":"283","messageId":"284","endLine":36,"endColumn":13},{"ruleId":"281","severity":1,"message":"282","line":51,"column":7,"nodeType":"283","messageId":"284","endLine":51,"endColumn":13},{"ruleId":"281","severity":1,"message":"282","line":56,"column":7,"nodeType":"283","messageId":"284","endLine":56,"endColumn":13},{"ruleId":"281","severity":1,"message":"282","line":61,"column":7,"nodeType":"283","messageId":"284","endLine":61,"endColumn":13},{"ruleId":"281","severity":1,"message":"282","line":77,"column":7,"nodeType":"283","messageId":"284","endLine":77,"endColumn":13},{"ruleId":"281","severity":1,"message":"282","line":82,"column":7,"nodeType":"283","messageId":"284","endLine":82,"endColumn":13},{"ruleId":"281","severity":1,"message":"282","line":87,"column":7,"nodeType":"283","messageId":"284","endLine":87,"endColumn":13},{"ruleId":"247","severity":1,"message":"272","line":3,"column":20,"nodeType":"249","messageId":"250","endLine":3,"endColumn":24},{"ruleId":"247","severity":1,"message":"287","line":3,"column":26,"nodeType":"249","messageId":"250","endLine":3,"endColumn":32},{"ruleId":"247","severity":1,"message":"248","line":3,"column":10,"nodeType":"249","messageId":"250","endLine":3,"endColumn":14},{"ruleId":"247","severity":1,"message":"288","line":10,"column":8,"nodeType":"249","messageId":"250","endLine":10,"endColumn":21},{"ruleId":"247","severity":1,"message":"289","line":5,"column":8,"nodeType":"249","messageId":"250","endLine":5,"endColumn":15},{"ruleId":"247","severity":1,"message":"290","line":12,"column":3,"nodeType":"249","messageId":"250","endLine":12,"endColumn":8},{"ruleId":"247","severity":1,"message":"251","line":16,"column":3,"nodeType":"249","messageId":"250","endLine":16,"endColumn":12},{"ruleId":"247","severity":1,"message":"272","line":17,"column":3,"nodeType":"249","messageId":"250","endLine":17,"endColumn":7},{"ruleId":"252","replacedBy":"291"},{"ruleId":"254","replacedBy":"292"},{"ruleId":"281","severity":1,"message":"282","line":11,"column":11,"nodeType":"283","messageId":"284","endLine":11,"endColumn":17},{"ruleId":"281","severity":1,"message":"282","line":17,"column":11,"nodeType":"283","messageId":"284","endLine":17,"endColumn":17},{"ruleId":"281","severity":1,"message":"282","line":23,"column":11,"nodeType":"283","messageId":"284","endLine":23,"endColumn":17},{"ruleId":"247","severity":1,"message":"293","line":21,"column":10,"nodeType":"249","messageId":"250","endLine":21,"endColumn":19},{"ruleId":"247","severity":1,"message":"294","line":21,"column":21,"nodeType":"249","messageId":"250","endLine":21,"endColumn":33},{"ruleId":"247","severity":1,"message":"295","line":57,"column":13,"nodeType":"249","messageId":"250","endLine":57,"endColumn":15},{"ruleId":"273","severity":1,"message":"274","line":73,"column":6,"nodeType":"275","endLine":73,"endColumn":41,"suggestions":"296"},{"ruleId":"247","severity":1,"message":"297","line":8,"column":8,"nodeType":"249","messageId":"250","endLine":8,"endColumn":14},{"ruleId":"247","severity":1,"message":"298","line":12,"column":8,"nodeType":"249","messageId":"250","endLine":12,"endColumn":14},{"ruleId":"247","severity":1,"message":"299","line":56,"column":10,"nodeType":"249","messageId":"250","endLine":56,"endColumn":23},{"ruleId":"247","severity":1,"message":"300","line":56,"column":25,"nodeType":"249","messageId":"250","endLine":56,"endColumn":41},{"ruleId":"273","severity":1,"message":"301","line":97,"column":6,"nodeType":"275","endLine":97,"endColumn":65,"suggestions":"302"},{"ruleId":"277","severity":1,"message":"278","line":9,"column":9,"nodeType":"279","messageId":"280","endLine":11,"endColumn":10},{"ruleId":"281","severity":1,"message":"282","line":12,"column":9,"nodeType":"283","messageId":"284","endLine":12,"endColumn":15},{"ruleId":"277","severity":1,"message":"278","line":15,"column":9,"nodeType":"279","messageId":"280","endLine":17,"endColumn":10},{"ruleId":"281","severity":1,"message":"282","line":18,"column":9,"nodeType":"283","messageId":"284","endLine":18,"endColumn":15},{"ruleId":"277","severity":1,"message":"278","line":21,"column":9,"nodeType":"279","messageId":"280","endLine":23,"endColumn":10},{"ruleId":"281","severity":1,"message":"282","line":24,"column":9,"nodeType":"283","messageId":"284","endLine":24,"endColumn":15},{"ruleId":"303","severity":1,"message":"304","line":10,"column":21,"nodeType":"305","endLine":10,"endColumn":79},{"ruleId":"247","severity":1,"message":"287","line":5,"column":10,"nodeType":"249","messageId":"250","endLine":5,"endColumn":16},{"ruleId":"247","severity":1,"message":"306","line":2,"column":10,"nodeType":"249","messageId":"250","endLine":2,"endColumn":17},{"ruleId":"307","severity":1,"message":"308","line":78,"column":5,"nodeType":"309","messageId":"310","endLine":171,"endColumn":6},{"ruleId":"247","severity":1,"message":"311","line":220,"column":9,"nodeType":"249","messageId":"250","endLine":220,"endColumn":20},"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'Container' is defined but never used.","no-native-reassign",["312"],"no-negated-in-lhs",["313"],"'Avatar' is defined but never used.","'CloseIcon' is defined but never used.","'PersonIcon' is defined but never used.",["312"],["313"],["312"],["313"],["312"],["313"],["312"],["313"],"'useState' is defined but never used.","'axios' is defined but never used.","'addToBasker' is assigned a value but never used.",["312"],["313"],"'Form' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["314"],"no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","no-unreachable","Unreachable code.","BreakStatement","unreachableCode",["312"],["313"],"'Button' is defined but never used.","'FormContainer' is defined but never used.","'Message' is defined but never used.","'Image' is defined but never used.",["312"],["313"],"'loginMode' is assigned a value but never used.","'setLoginMode' is assigned a value but never used.","'id' is assigned a value but never used.",["315"],"'AppBar' is defined but never used.","'Switch' is defined but never used.","'paymentMethod' is assigned a value but never used.","'setPaymentMethod' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'history', 'shippingDetails', 'success', and 'userInfo'. Either include them or remove the dependency array.",["316"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'connect' is defined but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'productData' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"317","fix":"318"},{"desc":"319","fix":"320"},{"desc":"321","fix":"322"},"Update the dependencies array to be: [dispatch, match]",{"range":"323","text":"324"},"Update the dependencies array to be: [props.history, userInfo, redirect, dispatch]",{"range":"325","text":"326"},"Update the dependencies array to be: [setAddress, setCity, setPostalCode, setCountry, cartItems, shippingDetails, userInfo, success, history]",{"range":"327","text":"328"},[741,748],"[dispatch, match]",[2131,2166],"[props.history, userInfo, redirect, dispatch]",[2696,2755],"[setAddress, setCity, setPostalCode, setCountry, cartItems, shippingDetails, userInfo, success, history]"]